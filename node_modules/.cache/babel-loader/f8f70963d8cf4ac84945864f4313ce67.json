{"ast":null,"code":"var _jsxFileName = \"/Users/hritikchhabra/portfolio/src/components/Projects/Projects.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport ProjectCard from \"./ProjectCards\";\nimport Particle from \"../Particle\";\nimport ReactGA from \"react-ga\";\nimport '../../Category.css';\n// Import project images\nimport eCom from \"../../Assets/Projects/E-com.png\";\nimport jsomBlog from \"../../Assets/Projects/jsomBlog.png\";\nimport taskify from \"../../Assets/Projects/Taskify.png\";\nimport aF from \"../../Assets/Projects/artisteeF.png\";\nimport aA from \"../../Assets/Projects/artisteeA.png\";\nimport easyCode from \"../../Assets/Projects/easy-code.png\";\n// Add other project images as needed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Projects() {\n  _s();\n  const [activeCategory, setActiveCategory] = useState(\"All\");\n  useEffect(() => {\n    ReactGA.pageview(window.location.pathname + window.location.search);\n  }, []);\n\n  // ...\n\n  const projectsData = [{\n    imgPath: taskify,\n    title: \"DeepRL for Algorithmic Trading\",\n    description: \"Developed and optimized deep reinforcement learning models to enhance trading strategies. Utilized Python, Pandas, NumPy, and TensorFlow, achieving a 25% improvement in strategy performance.\",\n    link: \"https://github.com/ezH1929/Deep-RL-for-Stock-Market\",\n    category: \"ML\"\n  }, {\n    imgPath: easyCode,\n    title: \"Ecommerce Website\",\n    description: \"Developed an e-commerce website using Java Spring Boot for backend integration, HTML5, CSS3, and JavaScript for a responsive frontend, and MySQL for efficient transaction management.\",\n    link: \"https://github.com/Swekrish303/Online_SuperMarket\",\n    category: \"Full-Stack\"\n  }, {\n    imgPath: eCom,\n    title: \"Time Series Analysis\",\n    description: \"I applied time series analysis techniques, particularly focusing on the Autoregressive Integrated Moving Average (ARIMA) model, to forecast COVID-19 deaths.\",\n    link: \"https://github.com/ezH1929/Time-Series-Analysis-for-Covid\",\n    category: \"Econometric\"\n  }, {\n    imgPath: jsomBlog,\n    title: \"Convex Hull Algorithms: Implementation and Visualization\",\n    description: \"Implemented and visualized two convex hull algorithms, Jarvis March and Kirkpatrick Seidel, using Python, Flask, and JavaScript.\",\n    link: \"https://github.com/ezH1929/Convex-Hull-Algorithms\",\n    category: \"Programming\"\n  }, {\n    imgPath: aF,\n    title: \"Image Reconstruction using Generative AI\",\n    description: \"Designed and implemented a comprehensive image reconstruction system in Python, utilizing PCA, PPCA, and VAE algorithms from scratch.\",\n    link: \"https://github.com/ezH1929/Image-reconstruction/tree/master/GenAI\",\n    category: \"ML\"\n  }, {\n    imgPath: aA,\n    title: \"StudyBuddy\",\n    description: \"Designed and developed a collaborative study group platform using the MERN stack (MongoDB, Express.js, React.js, Node.js).\",\n    link: \"https://github.com/ezH1929/StudyBuddy/tree/master\",\n    category: \"Full-Stack\"\n  }, {\n    imgPath: aA,\n    // Placeholder image path, replace with actual image for the ANFIS project\n    title: \"Stock Price Prediction using ANFIS\",\n    description: \"Developed a stock price prediction model using the Adaptive Neuro-Fuzzy Inference System (ANFIS), integrated with machine learning and fuzzy logic.\",\n    link: \"https://github.com/ezH1929/Stock-Price-Prediction-using-ANFIS-model\",\n    category: \"ML\" // Assign a category\n  }];\n\n  // ...\n\n  // Create a list of unique categories from the projects data\n  const categories = [\"All\", ...new Set(projectsData.map(project => project.category))];\n\n  // Filter the projects based on the active category\n  const filteredProjects = activeCategory === \"All\" ? projectsData : projectsData.filter(project => project.category === activeCategory);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    className: \"project-section\",\n    children: [/*#__PURE__*/_jsxDEV(Particle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"project-heading\",\n        children: [\"My Recent \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          className: \"purple\",\n          children: \"Works\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"white\"\n        },\n        children: \"Here are a few projects I've worked on recently.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), \"// ...\", /*#__PURE__*/_jsxDEV(Row, {\n        className: \"category-container\",\n        style: {\n          justifyContent: \"center\",\n          paddingBottom: \"10px\"\n        },\n        children: categories.map(category => /*#__PURE__*/_jsxDEV(Col, {\n          xs: 12,\n          sm: 6,\n          md: 4,\n          lg: 3,\n          xl: 2,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setActiveCategory(category),\n            className: `category-btn ${activeCategory === category ? 'category-btn-active' : ''}`,\n            children: category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 7\n          }, this)\n        }, category, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 5\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 1\n      }, this), \"// ...\", /*#__PURE__*/_jsxDEV(Row, {\n        style: {\n          justifyContent: \"center\",\n          paddingBottom: \"10px\"\n        },\n        children: filteredProjects.map((project, index) => /*#__PURE__*/_jsxDEV(Col, {\n          md: 4,\n          className: \"project-card\",\n          children: /*#__PURE__*/_jsxDEV(ProjectCard, {\n            imgPath: project.imgPath,\n            isBlog: false,\n            title: project.title,\n            description: project.description,\n            link: project.link\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n_s(Projects, \"qkJqz//WC3ClroXOWkVBpnH8RwM=\");\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","useEffect","useState","Container","Row","Col","ProjectCard","Particle","ReactGA","eCom","jsomBlog","taskify","aF","aA","easyCode","jsxDEV","_jsxDEV","Projects","_s","activeCategory","setActiveCategory","pageview","window","location","pathname","search","projectsData","imgPath","title","description","link","category","categories","Set","map","project","filteredProjects","filter","fluid","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","justifyContent","paddingBottom","xs","sm","md","lg","xl","onClick","index","isBlog","_c","$RefreshReg$"],"sources":["/Users/hritikchhabra/portfolio/src/components/Projects/Projects.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport ProjectCard from \"./ProjectCards\";\nimport Particle from \"../Particle\";\nimport ReactGA from \"react-ga\";\nimport '../../Category.css'\n// Import project images\nimport eCom from \"../../Assets/Projects/E-com.png\";\nimport jsomBlog from \"../../Assets/Projects/jsomBlog.png\";\nimport taskify from \"../../Assets/Projects/Taskify.png\";\nimport aF from \"../../Assets/Projects/artisteeF.png\";\nimport aA from \"../../Assets/Projects/artisteeA.png\";\nimport easyCode from \"../../Assets/Projects/easy-code.png\";\n// Add other project images as needed\n\nfunction Projects() {\n  const [activeCategory, setActiveCategory] = useState(\"All\");\n\n  useEffect(() => {\n    ReactGA.pageview(window.location.pathname + window.location.search);\n  }, []);\n\n  // ...\n\nconst projectsData = [\n  {\n    imgPath: taskify,\n    title: \"DeepRL for Algorithmic Trading\",\n    description: \"Developed and optimized deep reinforcement learning models to enhance trading strategies. Utilized Python, Pandas, NumPy, and TensorFlow, achieving a 25% improvement in strategy performance.\",\n    link: \"https://github.com/ezH1929/Deep-RL-for-Stock-Market\",\n    category: \"ML\"\n  },\n  {\n    imgPath: easyCode,\n    title: \"Ecommerce Website\",\n    description: \"Developed an e-commerce website using Java Spring Boot for backend integration, HTML5, CSS3, and JavaScript for a responsive frontend, and MySQL for efficient transaction management.\",\n    link: \"https://github.com/Swekrish303/Online_SuperMarket\",\n    category: \"Full-Stack\"\n  },\n  {\n    imgPath: eCom,\n    title: \"Time Series Analysis\",\n    description: \"I applied time series analysis techniques, particularly focusing on the Autoregressive Integrated Moving Average (ARIMA) model, to forecast COVID-19 deaths.\",\n    link: \"https://github.com/ezH1929/Time-Series-Analysis-for-Covid\",\n    category: \"Econometric\"\n  },\n  {\n    imgPath: jsomBlog,\n    title: \"Convex Hull Algorithms: Implementation and Visualization\",\n    description: \"Implemented and visualized two convex hull algorithms, Jarvis March and Kirkpatrick Seidel, using Python, Flask, and JavaScript.\",\n    link: \"https://github.com/ezH1929/Convex-Hull-Algorithms\",\n    category: \"Programming\"\n  },\n  {\n    imgPath: aF,\n    title: \"Image Reconstruction using Generative AI\",\n    description: \"Designed and implemented a comprehensive image reconstruction system in Python, utilizing PCA, PPCA, and VAE algorithms from scratch.\",\n    link: \"https://github.com/ezH1929/Image-reconstruction/tree/master/GenAI\",\n    category: \"ML\"\n  },\n  {\n    imgPath: aA,\n    title: \"StudyBuddy\",\n    description: \"Designed and developed a collaborative study group platform using the MERN stack (MongoDB, Express.js, React.js, Node.js).\",\n    link: \"https://github.com/ezH1929/StudyBuddy/tree/master\",\n    category: \"Full-Stack\"\n  },\n  {\n    imgPath: aA, // Placeholder image path, replace with actual image for the ANFIS project\n    title: \"Stock Price Prediction using ANFIS\",\n    description: \"Developed a stock price prediction model using the Adaptive Neuro-Fuzzy Inference System (ANFIS), integrated with machine learning and fuzzy logic.\",\n    link: \"https://github.com/ezH1929/Stock-Price-Prediction-using-ANFIS-model\",\n    category: \"ML\" // Assign a category\n  }\n];\n\n// ...\n\n\n  // Create a list of unique categories from the projects data\n  const categories = [\"All\", ...new Set(projectsData.map(project => project.category))];\n\n  // Filter the projects based on the active category\n  const filteredProjects = activeCategory === \"All\"\n    ? projectsData\n    : projectsData.filter(project => project.category === activeCategory);\n\n  return (\n    <Container fluid className=\"project-section\">\n      <Particle />\n      <Container>\n        <h1 className=\"project-heading\">\n          My Recent <strong className=\"purple\">Works</strong>\n        </h1>\n        <p style={{ color: \"white\" }}>\n          Here are a few projects I've worked on recently.\n        </p>\n        {/* Category buttons */}\n        // ...\n\n{/* Category buttons */}\n<Row className=\"category-container\" style={{ justifyContent: \"center\", paddingBottom: \"10px\" }}>\n  {categories.map(category => (\n    <Col key={category} xs={12} sm={6} md={4} lg={3} xl={2}>\n      <button\n        onClick={() => setActiveCategory(category)}\n        className={`category-btn ${activeCategory === category ? 'category-btn-active' : ''}`}\n      >\n        {category}\n      </button>\n    </Col>\n  ))}\n</Row>\n\n// ...\n\n        {/* Project cards */}\n        <Row style={{ justifyContent: \"center\", paddingBottom: \"10px\" }}>\n          {filteredProjects.map((project, index) => (\n            <Col key={index} md={4} className=\"project-card\">\n              <ProjectCard\n                imgPath={project.imgPath}\n                isBlog={false}\n                title={project.title}\n                description={project.description}\n                link={project.link}\n              />\n            </Col>\n          ))}\n        </Row>\n      </Container>\n    </Container>\n  );\n}\n\nexport default Projects;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}