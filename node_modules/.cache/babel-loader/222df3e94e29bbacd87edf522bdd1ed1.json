{"ast":null,"code":"import React, { useRef, useEffect, useState, useCallback } from 'react';\nimport format from 'date-fns/format';\nimport parseISO from 'date-fns/parseISO';\nimport getYear from 'date-fns/getYear';\nimport addDays from 'date-fns/addDays';\nimport getDay from 'date-fns/getDay';\nimport getMonth from 'date-fns/getMonth';\nimport isAfter from 'date-fns/isAfter';\nimport isSameYear from 'date-fns/isSameYear';\nimport setDay from 'date-fns/setDay';\nimport subYears from 'date-fns/subYears';\nimport color from 'tinycolor2';\nfunction styleInject(css, ref) {\n  if (ref === void 0) ref = {};\n  var insertAt = ref.insertAt;\n  if (!css || typeof document === 'undefined') {\n    return;\n  }\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\nvar css_248z = \".styles_chart__316M8 {\\n  margin-bottom: 1rem;\\n}\\n\\n.styles_calendar__1PAia {\\n  max-width: 100%;\\n  height: auto;\\n  margin-bottom: 0.25rem;\\n  overflow: visible;\\n}\\n\\n.styles_loading__1gKsy {\\n  font-size: 90%;\\n}\\n\\n.styles_title__HcRKb {\\n  margin-bottom: 0.5rem;\\n  padding-bottom: 0.25rem;\\n}\\n\";\nvar styles = {\n  \"chart\": \"styles_chart__316M8\",\n  \"calendar\": \"styles_calendar__1PAia\",\n  \"loading\": \"styles_loading__1gKsy\",\n  \"title\": \"styles_title__HcRKb\"\n};\nstyleInject(css_248z);\n\n// GitHub theme\nconst DEFAULT_THEME = {\n  background: 'transparent',\n  text: '#000',\n  grade4: '#216e39',\n  grade3: '#30a14e',\n  grade2: '#40c463',\n  grade1: '#9be9a8',\n  grade0: '#ebedf0'\n};\nconst NAMESPACE = 'react-github-calendar';\nconst LINE_HEIGHT = 1.5;\nconst MIN_DISTANCE_MONTH_LABELS = 2;\nfunction usePrevious(value) {\n  const ref = useRef(value);\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n  return ref.current;\n}\n\n// Import modules separately to reduce bundle size\nconst API_URL = 'https://ancient-butterfly.herokuapp.com/v3/';\nconst DATE_FORMAT = 'yyyy-MM-dd';\nfunction getContributionsForDate(data, date) {\n  return data.contributions.find(contrib => contrib.date === date);\n}\nfunction getBlocksForYear(year, data, lastYear) {\n  const now = new Date();\n  const firstDate = lastYear ? subYears(now, 1) : parseISO(`${year}-01-01`);\n  const lastDate = lastYear ? now : parseISO(`${year}-12-31`);\n  let weekStart = firstDate; // The week starts on Sunday - add days to get to next sunday if neccessary\n\n  if (getDay(firstDate) !== 0) {\n    weekStart = addDays(firstDate, getDay(firstDate));\n  } // Fetch graph data for first row (Sundays)\n\n  const firstRowDates = [];\n  while (weekStart <= lastDate) {\n    const date = format(weekStart, DATE_FORMAT);\n    firstRowDates.push({\n      date,\n      info: getContributionsForDate(data, date)\n    });\n    weekStart = setDay(weekStart, 7);\n  } // Add the remainig days per week (column for column)\n\n  return firstRowDates.map(dateObj => {\n    const dates = [];\n    for (let i = 0; i <= 6; i += 1) {\n      const date = format(setDay(parseISO(dateObj.date), i), DATE_FORMAT);\n      if (isAfter(parseISO(date), lastDate)) {\n        break;\n      }\n      dates.push({\n        date,\n        info: getContributionsForDate(data, date)\n      });\n    }\n    return dates;\n  });\n}\nfunction getMonthLabels(blocks, lastYear) {\n  const weeks = blocks.slice(0, lastYear ? blocks.length - 1 : blocks.length);\n  let previousMonth = 0; // January\n\n  return weeks.reduce((labels, week, x) => {\n    const firstWeekDay = parseISO(week[0].date);\n    const month = getMonth(firstWeekDay) + 1;\n    const monthChanged = month !== previousMonth;\n    const firstMonthIsDecember = x === 0 && month === 12;\n    if (monthChanged && !firstMonthIsDecember) {\n      labels.push({\n        x,\n        label: format(firstWeekDay, 'MMM')\n      });\n      previousMonth = month;\n    }\n    return labels;\n  }, []);\n}\nfunction getGraphDataForYear(year, data, lastYear) {\n  var _data$years;\n  const blocks = getBlocksForYear(year, data, lastYear);\n  const monthLabels = getMonthLabels(blocks, lastYear);\n  const totalCount = (_data$years = data.years[lastYear ? 'lastYear' : year]) !== null && _data$years !== void 0 ? _data$years : 0;\n  return {\n    year,\n    blocks,\n    monthLabels,\n    totalCount\n  };\n}\nasync function getGitHubGraphData(options) {\n  const {\n    username,\n    years,\n    lastYear\n  } = options;\n  const data = await (await fetch(`${API_URL}${username}?y=all&y=lastYear`)).json();\n  if (!Object.keys(data.years).length) {\n    throw Error('No data available');\n  }\n  return years.map(year => {\n    const isCurrentYear = isSameYear(parseISO(String(year)), new Date());\n    return getGraphDataForYear(year, data, isCurrentYear && lastYear);\n  });\n}\nfunction createCalendarTheme(baseColor, textColor = 'inherit', emptyCellColor = color('white').darken(8).toHslString(), background = 'transparent') {\n  const base = color(baseColor);\n  if (!base.isValid()) {\n    return DEFAULT_THEME;\n  }\n  const text = color(textColor).isValid() ? String(color(textColor)) : DEFAULT_THEME.text;\n  return {\n    background,\n    text,\n    grade4: base.setAlpha(0.92).toHslString(),\n    grade3: base.setAlpha(0.76).toHslString(),\n    grade2: base.setAlpha(0.6).toHslString(),\n    grade1: base.setAlpha(0.44).toHslString(),\n    grade0: emptyCellColor\n  };\n}\nfunction getClassName(name, extra) {\n  if (extra) {\n    return `${NAMESPACE}__${name} ${extra}`;\n  }\n  return `${NAMESPACE}__${name}`;\n}\nconst GitHubCalendar = ({\n  username,\n  blockMargin = 2,\n  blockSize = 12,\n  children,\n  color = undefined,\n  dateFormat = 'MMM d, yyyy',\n  fontSize = 14,\n  fullYear = true,\n  showTotalCount = true,\n  style = {},\n  theme = undefined,\n  years = [Number(format(new Date(), 'yyyy'))]\n}) => {\n  const [graphs, setGraphs] = useState(null);\n  const [error, setError] = useState(null);\n  const prevYears = usePrevious(years);\n  const prevUsername = usePrevious(username);\n  const prevFullYear = usePrevious(fullYear);\n  const fetchData = useCallback(() => {\n    setError(null);\n    getGitHubGraphData({\n      years,\n      username,\n      lastYear: fullYear\n    }).then(setGraphs).catch(setError);\n  }, [years, username, fullYear]); // Fetch data on mount\n\n  useEffect(() => {\n    fetchData();\n  }, []); // eslint-disable-line\n  // Refetch if relevant props change\n\n  useEffect(() => {\n    if (prevFullYear !== fullYear || prevUsername !== username || prevYears.some(y => !years.includes(y))) {\n      fetchData();\n    }\n  }, [fetchData, fullYear, prevFullYear, prevUsername, prevYears, username, years]);\n  function getTheme() {\n    if (theme) {\n      return Object.assign({}, DEFAULT_THEME, theme);\n    }\n    if (color) {\n      return createCalendarTheme(color);\n    }\n    return DEFAULT_THEME;\n  }\n  function getDimensions() {\n    const textHeight = Math.round(fontSize * LINE_HEIGHT); // Since weeks start on Sunday, there is a good chance that the graph starts\n    // in the week before January 1st. Therefore, the calendar shows 53 weeks.\n\n    const width = (52 + 1) * (blockSize + blockMargin) - blockMargin;\n    const height = textHeight + (blockSize + blockMargin) * 7 - blockMargin;\n    return {\n      width,\n      height\n    };\n  }\n  function getTooltipMessage(day) {\n    const date = parseISO(day.date);\n    return `<strong>${day.info.count} contributions</strong> on ${format(date, dateFormat)}`;\n  }\n  function renderMonthLabels(monthLabels) {\n    const style = {\n      fill: getTheme().text,\n      fontSize\n    }; // Remove the first month label if there's not enough space to the next one\n    // (end of previous month)\n\n    if (monthLabels[1].x - monthLabels[0].x <= MIN_DISTANCE_MONTH_LABELS) {\n      monthLabels.shift();\n    }\n    return monthLabels.map(month => /*#__PURE__*/React.createElement(\"text\", {\n      x: (blockSize + blockMargin) * month.x,\n      y: fontSize,\n      key: month.x,\n      style: style\n    }, month.label));\n  }\n  function renderBlocks(blocks) {\n    const theme = getTheme();\n    const textHeight = Math.round(fontSize * LINE_HEIGHT);\n    return blocks.map(week => week.map((day, y) => /*#__PURE__*/React.createElement(\"rect\", {\n      x: \"0\",\n      y: textHeight + (blockSize + blockMargin) * y,\n      width: blockSize,\n      height: blockSize,\n      fill: theme[`grade${day.info ? day.info.level : 0}`],\n      \"data-tip\": day.info ? getTooltipMessage(day) : null,\n      key: day.date\n    }))).map((week, x) => /*#__PURE__*/React.createElement(\"g\", {\n      key: x,\n      transform: `translate(${(blockSize + blockMargin) * x}, 0)`\n    }, week));\n  }\n  function renderTotalCount(year, totalCount) {\n    const isCurrentYear = getYear(new Date()) === year;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: getClassName('meta'),\n      style: {\n        fontSize\n      }\n    }, isCurrentYear && fullYear ? 'Last year' : year, ' â€“ ', isCurrentYear && !fullYear ? 'So far ' : null, totalCount, \" contributions\");\n  }\n  const {\n    width,\n    height\n  } = getDimensions();\n  if (error) {\n    console.error(error);\n    return /*#__PURE__*/React.createElement(\"p\", null, \"Error :(\");\n  }\n  if (!graphs) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: getClassName('loading', styles.loading)\n    }, \"Loading \\u2026\");\n  }\n  return /*#__PURE__*/React.createElement(\"article\", {\n    className: NAMESPACE,\n    style: style\n  }, graphs.map(graph => {\n    const {\n      year,\n      blocks,\n      monthLabels,\n      totalCount\n    } = graph;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: year,\n      className: getClassName('chart', styles.chart)\n    }, /*#__PURE__*/React.createElement(\"svg\", {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      width: width,\n      height: height,\n      viewBox: `0 0 ${width} ${height}`,\n      className: getClassName('calendar', styles.calendar),\n      style: {\n        backgroundColor: theme === null || theme === void 0 ? void 0 : theme.background\n      }\n    }, renderMonthLabels(monthLabels), renderBlocks(blocks)), showTotalCount && renderTotalCount(year, totalCount), children);\n  }));\n};\nexport default GitHubCalendar;\nexport { createCalendarTheme };","map":{"version":3,"sources":["../node_modules/style-inject/dist/style-inject.es.js","../src/utils/constants.ts","../src/hooks/usePrevious.ts","../src/services/contributions.ts","../src/utils/index.ts","../src/components/GitHubCalendar/index.tsx"],"names":["DEFAULT_THEME","background","text","grade4","grade3","grade2","grade1","grade0","NAMESPACE","LINE_HEIGHT","MIN_DISTANCE_MONTH_LABELS","usePrevious","value","ref","useRef","useEffect","current","API_URL","DATE_FORMAT","getContributionsForDate","data","date","contributions","find","contrib","getBlocksForYear","year","lastYear","now","Date","firstDate","subYears","parseISO","lastDate","weekStart","getDay","addDays","firstRowDates","format","push","info","setDay","map","dateObj","dates","i","isAfter","getMonthLabels","blocks","weeks","slice","length","previousMonth","reduce","labels","week","x","firstWeekDay","month","getMonth","monthChanged","firstMonthIsDecember","label","getGraphDataForYear","monthLabels","totalCount","years","getGitHubGraphData","options","username","fetch","json","Object","keys","Error","isCurrentYear","isSameYear","String","createCalendarTheme","baseColor","textColor","emptyCellColor","color","darken","toHslString","base","isValid","setAlpha","getClassName","name","extra","GitHubCalendar","blockMargin","blockSize","children","undefined","dateFormat","fontSize","fullYear","showTotalCount","style","theme","Number","graphs","setGraphs","useState","error","setError","prevYears","prevUsername","prevFullYear","fetchData","useCallback","then","catch","some","y","includes","getTheme","assign","getDimensions","textHeight","Math","round","width","height","getTooltipMessage","day","count","renderMonthLabels","fill","shift","renderBlocks","level","renderTotalCount","getYear","console","styles","loading","graph","chart","calendar","backgroundColor"],"mappings":"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","sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","// GitHub theme\nexport type Theme = {\n  [key: string]: string;\n  background: string;\n  text: string;\n  grade4: string;\n  grade3: string;\n  grade2: string;\n  grade1: string;\n  grade0: string;\n};\n\nexport const DEFAULT_THEME = {\n  background: 'transparent',\n  text: '#000',\n  grade4: '#216e39',\n  grade3: '#30a14e',\n  grade2: '#40c463',\n  grade1: '#9be9a8',\n  grade0: '#ebedf0',\n};\n\nexport const NAMESPACE = 'react-github-calendar';\n\nexport const LINE_HEIGHT = 1.5;\nexport const MIN_DISTANCE_MONTH_LABELS = 2;\n","import { useRef, useEffect } from 'react';\n\nexport function usePrevious<T>(value: T): T {\n  const ref = useRef<T>(value);\n\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n\n  return ref.current;\n}\n","// Import modules separately to reduce bundle size\nimport addDays from 'date-fns/addDays';\nimport format from 'date-fns/format';\nimport getDay from 'date-fns/getDay';\nimport getMonth from 'date-fns/getMonth';\nimport isAfter from 'date-fns/isAfter';\nimport isSameYear from 'date-fns/isSameYear';\nimport parseISO from 'date-fns/parseISO';\nimport setDay from 'date-fns/setDay';\nimport subYears from 'date-fns/subYears';\n\nconst API_URL = 'https://ancient-butterfly.herokuapp.com/v3/';\nconst DATE_FORMAT = 'yyyy-MM-dd';\n\nexport type Block = {\n  date: string;\n  info?: {\n    date: string;\n    count: number;\n    level: number;\n  };\n};\n\ninterface MonthLabel {\n  x: number;\n  label: string;\n}\n\nexport interface GraphData {\n  year: number;\n  blocks: Array<Array<Block>>;\n  monthLabels: Array<MonthLabel>;\n  totalCount: number;\n}\n\nexport interface RequestOptions {\n  username: string;\n  years: Array<number>;\n  lastYear: boolean;\n}\n\ninterface ApiResult {\n  years: {\n    [year: number]: number;\n    [year: string]: number; // lastYear\n  };\n  contributions: Array<{\n    date: string;\n    count: number;\n    level: number;\n  }>;\n}\n\nfunction getContributionsForDate(data: ApiResult, date: string) {\n  return data.contributions.find(contrib => contrib.date === date);\n}\n\nfunction getBlocksForYear(year: number, data: ApiResult, lastYear: boolean) {\n  const now = new Date();\n  const firstDate = lastYear ? subYears(now, 1) : parseISO(`${year}-01-01`);\n  const lastDate = lastYear ? now : parseISO(`${year}-12-31`);\n\n  let weekStart = firstDate;\n\n  // The week starts on Sunday - add days to get to next sunday if neccessary\n  if (getDay(firstDate) !== 0) {\n    weekStart = addDays(firstDate, getDay(firstDate));\n  }\n\n  // Fetch graph data for first row (Sundays)\n  const firstRowDates = [];\n  while (weekStart <= lastDate) {\n    const date = format(weekStart, DATE_FORMAT);\n\n    firstRowDates.push({\n      date,\n      info: getContributionsForDate(data, date),\n    });\n\n    weekStart = setDay(weekStart, 7);\n  }\n\n  // Add the remainig days per week (column for column)\n  return firstRowDates.map(dateObj => {\n    const dates = [];\n    for (let i = 0; i <= 6; i += 1) {\n      const date = format(setDay(parseISO(dateObj.date), i), DATE_FORMAT);\n\n      if (isAfter(parseISO(date), lastDate)) {\n        break;\n      }\n\n      dates.push({\n        date,\n        info: getContributionsForDate(data, date),\n      });\n    }\n\n    return dates;\n  });\n}\n\nfunction getMonthLabels(blocks: GraphData['blocks'], lastYear: boolean): Array<MonthLabel> {\n  const weeks = blocks.slice(0, lastYear ? blocks.length - 1 : blocks.length);\n  let previousMonth = 0; // January\n\n  return weeks.reduce<Array<MonthLabel>>((labels, week, x) => {\n    const firstWeekDay = parseISO(week[0].date);\n    const month = getMonth(firstWeekDay) + 1;\n    const monthChanged = month !== previousMonth;\n    const firstMonthIsDecember = x === 0 && month === 12;\n\n    if (monthChanged && !firstMonthIsDecember) {\n      labels.push({\n        x,\n        label: format(firstWeekDay, 'MMM'),\n      });\n      previousMonth = month;\n    }\n\n    return labels;\n  }, []);\n}\n\nfunction getGraphDataForYear(year: number, data: ApiResult, lastYear: boolean): GraphData {\n  const blocks = getBlocksForYear(year, data, lastYear);\n  const monthLabels = getMonthLabels(blocks, lastYear);\n  const totalCount = data.years[lastYear ? 'lastYear' : year] ?? 0;\n\n  return {\n    year,\n    blocks,\n    monthLabels,\n    totalCount,\n  };\n}\n\nexport async function getGitHubGraphData(options: RequestOptions): Promise<Array<GraphData>> {\n  const { username, years, lastYear } = options;\n  const data: ApiResult = await (await fetch(`${API_URL}${username}?y=all&y=lastYear`)).json();\n\n  if (!Object.keys(data.years).length) {\n    throw Error('No data available');\n  }\n\n  return years.map(year => {\n    const isCurrentYear = isSameYear(parseISO(String(year)), new Date());\n\n    return getGraphDataForYear(year, data, isCurrentYear && lastYear);\n  });\n}\n","import color, { ColorInput } from 'tinycolor2';\n\nimport { DEFAULT_THEME, NAMESPACE, Theme } from './constants';\n\nexport function createCalendarTheme(\n  baseColor: ColorInput,\n  textColor = 'inherit',\n  emptyCellColor = color('white').darken(8).toHslString(),\n  background = 'transparent',\n): Theme {\n  const base = color(baseColor);\n\n  if (!base.isValid()) {\n    return DEFAULT_THEME;\n  }\n\n  const text = color(textColor).isValid() ? String(color(textColor)) : DEFAULT_THEME.text;\n\n  return {\n    background,\n    text,\n    grade4: base.setAlpha(0.92).toHslString(),\n    grade3: base.setAlpha(0.76).toHslString(),\n    grade2: base.setAlpha(0.6).toHslString(),\n    grade1: base.setAlpha(0.44).toHslString(),\n    grade0: emptyCellColor,\n  };\n}\n\nexport function getClassName(name: string, extra?: string): string {\n  if (extra) {\n    return `${NAMESPACE}__${name} ${extra}`;\n  }\n\n  return `${NAMESPACE}__${name}`;\n}\n","import React, { useState, CSSProperties, useEffect, useCallback } from 'react';\nimport format from 'date-fns/format';\nimport parseISO from 'date-fns/parseISO';\nimport getYear from 'date-fns/getYear';\nimport { ColorInput } from 'tinycolor2';\n\nimport styles from './styles.css';\n\nimport {\n  DEFAULT_THEME,\n  LINE_HEIGHT,\n  MIN_DISTANCE_MONTH_LABELS,\n  NAMESPACE,\n  Theme,\n} from '../../utils/constants';\nimport { usePrevious } from '../../hooks/usePrevious';\nimport { getGitHubGraphData, GraphData, Block } from '../../services/contributions';\nimport { createCalendarTheme, getClassName } from '../../utils';\n\nexport type Props = {\n  username: string;\n  blockMargin?: number;\n  blockSize?: number;\n  color?: ColorInput;\n  dateFormat?: string;\n  fontSize?: number;\n  fullYear?: boolean;\n  showTotalCount?: boolean;\n  style?: CSSProperties;\n  theme?: Theme;\n  years?: Array<number>;\n};\n\nconst GitHubCalendar: React.FC<Props> = ({\n  username,\n  blockMargin = 2,\n  blockSize = 12,\n  children,\n  color = undefined,\n  dateFormat = 'MMM d, yyyy',\n  fontSize = 14,\n  fullYear = true,\n  showTotalCount = true,\n  style = {},\n  theme = undefined,\n  years = [Number(format(new Date(), 'yyyy'))],\n}) => {\n  const [graphs, setGraphs] = useState<Array<GraphData> | null>(null);\n  const [error, setError] = useState<Error | null>(null);\n\n  const prevYears = usePrevious(years);\n  const prevUsername = usePrevious(username);\n  const prevFullYear = usePrevious(fullYear);\n\n  const fetchData = useCallback(() => {\n    setError(null);\n    getGitHubGraphData({\n      years,\n      username,\n      lastYear: fullYear,\n    })\n      .then(setGraphs)\n      .catch(setError);\n  }, [years, username, fullYear]);\n\n  // Fetch data on mount\n  useEffect(() => {\n    fetchData();\n  }, []); // eslint-disable-line\n\n  // Refetch if relevant props change\n  useEffect(() => {\n    if (\n      prevFullYear !== fullYear ||\n      prevUsername !== username ||\n      prevYears.some(y => !years.includes(y))\n    ) {\n      fetchData();\n    }\n  }, [fetchData, fullYear, prevFullYear, prevUsername, prevYears, username, years]);\n\n  function getTheme(): Theme {\n    if (theme) {\n      return Object.assign({}, DEFAULT_THEME, theme);\n    }\n\n    if (color) {\n      return createCalendarTheme(color);\n    }\n\n    return DEFAULT_THEME;\n  }\n\n  function getDimensions() {\n    const textHeight = Math.round(fontSize * LINE_HEIGHT);\n\n    // Since weeks start on Sunday, there is a good chance that the graph starts\n    // in the week before January 1st. Therefore, the calendar shows 53 weeks.\n    const width = (52 + 1) * (blockSize + blockMargin) - blockMargin;\n    const height = textHeight + (blockSize + blockMargin) * 7 - blockMargin;\n\n    return { width, height };\n  }\n\n  function getTooltipMessage(day: Required<Block>) {\n    const date = parseISO(day.date);\n    return `<strong>${day.info.count} contributions</strong> on ${format(date, dateFormat)}`;\n  }\n\n  function renderMonthLabels(monthLabels: GraphData['monthLabels']) {\n    const style = {\n      fill: getTheme().text,\n      fontSize,\n    };\n\n    // Remove the first month label if there's not enough space to the next one\n    // (end of previous month)\n    if (monthLabels[1].x - monthLabels[0].x <= MIN_DISTANCE_MONTH_LABELS) {\n      monthLabels.shift();\n    }\n\n    return monthLabels.map(month => (\n      <text x={(blockSize + blockMargin) * month.x} y={fontSize} key={month.x} style={style}>\n        {month.label}\n      </text>\n    ));\n  }\n\n  function renderBlocks(blocks: GraphData['blocks']) {\n    const theme = getTheme();\n    const textHeight = Math.round(fontSize * LINE_HEIGHT);\n\n    return blocks\n      .map(week =>\n        week.map((day, y) => (\n          <rect\n            x=\"0\"\n            y={textHeight + (blockSize + blockMargin) * y}\n            width={blockSize}\n            height={blockSize}\n            fill={theme[`grade${day.info ? day.info.level : 0}`]}\n            data-tip={day.info ? getTooltipMessage(day as Required<Block>) : null}\n            key={day.date}\n          />\n        )),\n      )\n      .map((week, x) => (\n        <g key={x} transform={`translate(${(blockSize + blockMargin) * x}, 0)`}>\n          {week}\n        </g>\n      ));\n  }\n\n  function renderTotalCount(year: number, totalCount: number) {\n    const isCurrentYear = getYear(new Date()) === year;\n\n    return (\n      <div className={getClassName('meta')} style={{ fontSize }}>\n        {isCurrentYear && fullYear ? 'Last year' : year}\n        {' â€“ '}\n        {isCurrentYear && !fullYear ? 'So far ' : null}\n        {totalCount} contributions\n      </div>\n    );\n  }\n\n  const { width, height } = getDimensions();\n\n  if (error) {\n    console.error(error);\n    return <p>Error :(</p>;\n  }\n\n  if (!graphs) {\n    return <div className={getClassName('loading', styles.loading)}>Loading â€¦</div>;\n  }\n\n  return (\n    <article className={NAMESPACE} style={style}>\n      {graphs.map(graph => {\n        const { year, blocks, monthLabels, totalCount } = graph;\n\n        return (\n          <div key={year} className={getClassName('chart', styles.chart)}>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width={width}\n              height={height}\n              viewBox={`0 0 ${width} ${height}`}\n              className={getClassName('calendar', styles.calendar)}\n              style={{ backgroundColor: theme?.background }}\n            >\n              {renderMonthLabels(monthLabels)}\n              {renderBlocks(blocks)}\n            </svg>\n\n            {showTotalCount && renderTotalCount(year, totalCount)}\n            {children}\n          </div>\n        );\n      })}\n    </article>\n  );\n};\n\nexport default GitHubCalendar;\n"]},"metadata":{},"sourceType":"module"}